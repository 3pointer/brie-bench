#! /bin/bash

set -eu

if ! source bin/utils.sh; then
    echo "failed to load the utils package. make sure bin/utils.sh exists"
    exit 1
fi

parse_args $@


if [ ! $component ]; then
    show_help
    fail "must provide a component name"
fi

log component = $component
log hash = ${hash-"default"}
log workload = ${workload:="tpcc1000"}
basic_json=`echo '{
    "cluster_request": {
        "name": "brie-test",
        "version": "nightly"
    },
    "cluster_request_topologies": [
        {"component": "tidb", "deploy_path": "/data1", "rri_item_id": 1}, 
        {"component": "pd", "deploy_path": "/data1", "rri_item_id": 1}, 
        {"component": "tikv", "deploy_path": "/data1", "rri_item_id": 2},
        {"component": "prometheus", "deploy_path": "/data1", "rri_item_id": 1},
        {"component": "grafana", "deploy_path": "/data1", "rri_item_id": 1}
    ],
    "cluster_workload": {        
        "type": "standard",               
        "docker_image": "lovecsust/brie-bench:latest",
        "cmd": "bin/run",
        "args": [],
        "rri_item_id": 1,                      
        "artifact_dir": "/artifacts",
        "env": {}
    }
}' | jq ".cluster_workload.args+=[\"--component\", \"$component\"]"`

basic_json=`echo $basic_json | jq ".cluster_workload.args+=$other_args | .cluster_request.name=\"$component-bench\" | .cluster_workload.args+=$cargs"`
if [ ! ${workload_storage-""} ]; then
  basic_json=`echo $basic_json | \
  jq ".cluster_workload.args+=[\"--workload-storage\", \
    \"s3://brie/$workload?access-key=YOURACCESSKEY&secret-access-key=YOURSECRETKEY&endpoint=172.16.4.4:30812&force-path-style=true\"]"`
fi
if [ $component = "dumpling" ]; then
  basic_json=`echo $basic_json | jq ".cluster_workload.restore_path=\"mybucket/$workload\""`
fi

log running with request
log $basic_json

if [ ! ${dry_run-""} ]; then
  log requesting...
  cluster_id=$(curl -# 172.16.5.110:8000/api/cluster/test -XPOST -d "$basic_json" | jq ".cluster_request_id")
  add_cluster $cluster_id
  log request success, cluster ID: $cluster_id
fi
set +eu